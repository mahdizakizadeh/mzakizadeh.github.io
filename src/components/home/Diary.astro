---
import { getCollection } from "astro:content";

const entries = (await getCollection("diary")).sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);

const N = 5;

const renderedEntries = await Promise.all(
    entries.slice(0, N).map(async (entry) => {
        const { Content } = await entry.render();
        return {
            ...entry,
            renderedBody: Content,
        };
    }),
);
---

<div class="diary">
    <ul>
        {
            renderedEntries.map((entry) => (
                <li>
                    <span class="date">
                        {new Intl.DateTimeFormat("en", {
                            month: "short",
                            year: "numeric",
                        }).format(entry.data.date)}
                    </span>
                    <entry.renderedBody />
                </li>
            ))
        }
    </ul>
    {
        entries.length > N && (
            <a href="/archive/diary">
                <span>&rarr;</span>
                Diary Archive
            </a>
        )
    }
</div>
<style>
    .diary {
        margin-bottom: 3rem;
    }
    .diary ul {
        width: 100%;
        margin: 0;
        padding-bottom: 0;
        text-align: justify;
        list-style: none;
        padding: 0;
    }
    .diary ul li {
        width: 100%;
        font-size: 1rem;
        display: flex;
        flex-direction: rows;
        align-items: center;
        padding-bottom: 0.5rem;
        margin-bottom: -1rem;
    }
    .diary ul li :global(a) {
        text-decoration: none;
    }
    .diary ul li .date {
        min-width: 7rem;
        font-size: 1rem;
    }
    .diary a {
        padding-left: 7rem;
        font-size: 1rem;
    }
</style>
